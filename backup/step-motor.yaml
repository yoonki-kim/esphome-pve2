esphome:
  name: step-motor
  friendly_name: step-motor

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

# Enable logging
logger:
  hardware_uart: uart0

# Enable Home Assistant API
api:
  encryption:
    key: "6R+RJ2nermStOC6VTRhAcKmpVJG9QF/tj2LgcsZdV3s="

ota:
  password: "388119d01aa9e91997fd445dc18c00e8"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Step-Motor"
    password: "gtruPsV8aPEJ"

  # Optional manual IP
  manual_ip:
    static_ip: 192.168.10.144
    gateway: 192.168.10.1
    subnet: 255.255.255.0

captive_portal:

web_server:
  port: 80

# =========================================
uart:
  id: uart_motor
  rx_pin: GPIO15
  tx_pin: GPIO16
  baud_rate: 9600

# =========================================
switch:
  # OnBoard LED
  - platform: gpio
    pin: GPIO46
    name: "OnBoard LED"
    id: onboard_led

  - platform: template
    name: "Motor button"
    id: motor_button
    turn_on_action:
      then:
        - switch.template.publish:
            id: motor_button
            state: ON
        - stepper.report_position:
            id: my_stepper
            position: 80000
        - lambda: |-
            int pos = id(my_stepper).current_position;
            ESP_LOGD("stepper", "Stepper moved to position: %d", pos);
    turn_off_action: 
      then:
        - switch.template.publish:
            id: motor_button
            state: OFF
        - stepper.report_position:
            id: my_stepper
            position: -80000
        - lambda: |-
            int pos = id(my_stepper).current_position;
            ESP_LOGD("stepper", "Stepper moved to position: %d", pos);
        # - stepper.set_target: 
        #     id: my_stepper
        #     target: -80000
        # - lambda: |-
        #       if (id(motor_button).state) {
        #         return false;
        #       }
        # - stepper.report_position: 
        #     id: my_stepper
        #     position: !lambda |-
        #       if(id(motor_button).state) {
        #         return 80000;
        #       }
        #       else {
        #         return -80000;
        #       }

# =========================================
binary_sensor:
  # OnBoard Button
  - platform: gpio
    pin: 
      number: GPIO0
      inverted: true
    name: "OnBoard Button"
    id: onboard_button
    on_press:
      then:
        - switch.toggle: onboard_led

# =========================================
button:
  - platform: template
    name: "Motor Stop Button"
    on_press:
        - stepper.set_target: 
            id: my_stepper
            target: !lambda return id(my_stepper).current_position;
  - platform: template
    name: "Motor Go Button"
    on_press:
        - stepper.set_target: 
            id: my_stepper
            target: !lambda return id(motor_button).state;
        - lambda: |-
            int pos = id(my_stepper).current_position;
            ESP_LOGD("stepper", "Here is %d", pos);
            

# Step motor setting =========================================
stepper:
  - platform: a4988
    id: my_stepper
    step_pin: GPIO10
    dir_pin: 
      number: GPIO9
      inverted: True
    #모터 속도 제어  
    max_speed: 20000
    sleep_pin: 
      number: GPIO35
      inverted: True
    acceleration: inf
    deceleration: inf
