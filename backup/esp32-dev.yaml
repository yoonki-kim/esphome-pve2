esphome:
  name: esp32-dev
  friendly_name: esp32-dev

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "su9Ip+eBylDS0oJuoey+ED2aSRcPV6GmPUH1VelaDvE="

ota:
  password: "0555a21aef74c5d553ccbe912c95bc44"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp32-Dev Fallback Hotspot"
    password: "yUTU3tJfpI5V"

  # Optional manual IP
  manual_ip:
    static_ip: 192.168.10.127
    gateway: 192.168.10.1
    subnet: 255.255.255.0

captive_portal:

globals:
  - id: g_cnt
    type: int
    restore_value: no
    initial_value: '0'

web_server:
  port: 80

switch:
  - platform: gpio
    pin: GPIO2
    name: "OnBoard LED"
    id: onboard_led

# esp32_touch:

binary_sensor:
  - platform: gpio
    pin: GPIO0
    name: "Onboard Button"
    on_press:
      then:
        - switch.toggle: onboard_led
  # - platform: esp32_touch
  #   name: "Touch Pad GPIO27"
  #   pin: GPIO27
  #   threshold: 1000

deep_sleep:
  id: deep_sleep1
  run_duration: 10s
  # touch_wakeup: true
  wakeup_pin:
    number: 27
    mode:
      input: true
      output: false
      open_drain: false
      pullup: false
      pulldown: true
    inverted: true
    ignore_strapping_warning: false
    drive_strength: 20.0
  sleep_duration: 2min

sensor:
  - platform: template
    name: "Wakeup Cause"
    accuracy_decimals: 0
    lambda: return esp_sleep_get_wakeup_cause();

interval:
  - interval: 1s
    then:
      - switch.toggle: onboard_led
      - lambda: |-
          id(g_cnt)++;
          ESP_LOGD("interval", "time: %d", id(g_cnt));

    